@model GYM_Manage.Models.BaiViet
@{
    ViewData["Title"] = Model?.MaBaiViet > 0 ? "Chỉnh Sửa Bài Viết" : "Thêm Mới Bài Viết";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container-fluid">
    <h4 class="mb-4">
        <span class="fw-bolder">@ViewData["Title"]</span>
    </h4>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold">Thông tin bài viết</h6>
        </div>
        <div class="card-body">
            <form asp-action="@(Model?.MaBaiViet > 0 ? "Edit" : "Create")" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                
                @if (Model?.MaBaiViet > 0)
                {
                    <input type="hidden" asp-for="MaBaiViet" />
                    <input type="hidden" asp-for="NgayDang" />
                    <input type="hidden" asp-for="IDNguoiTao" />
                }
                
                <div class="row mb-3">
                    <div class="col-md-12">
                        <div class="form-group mb-3">
                            <label asp-for="TieuDe" class="form-label">Tiêu đề</label>
                            <input asp-for="TieuDe" class="form-control" required maxlength="200" />
                            <span asp-validation-for="TieuDe" class="text-danger"></span>
                        </div>
                        
                        <div class="form-group mb-3">
                            <label asp-for="MoTaNgan" class="form-label">Mô tả ngắn</label>
                            <textarea asp-for="MoTaNgan" class="form-control" rows="3" maxlength="500" required></textarea>
                            <span asp-validation-for="MoTaNgan" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="HinhAnh" class="form-label">Hình ảnh Preview</label>
                    <input type="file" name="hinhAnh" class="form-control" accept="image/*" required="@(string.IsNullOrEmpty(Model?.HinhAnh))" />
                    @if (!string.IsNullOrEmpty(Model?.HinhAnh))
                    {
                        <div class="mt-2">
                            <img src="@Model.HinhAnh" alt="Hình ảnh bài viết" style="max-width: 200px; max-height: 200px;" class="img-thumbnail" />
                            <input type="hidden" asp-for="HinhAnh" />
                        </div>
                    }
                    <span asp-validation-for="HinhAnh" class="text-danger"></span>
                </div>
                
                <div class="form-group mb-3">
                    <label asp-for="NoiDung" class="form-label">Nội dung</label>
                    <textarea asp-for="NoiDung" class="form-control" id="editor" rows="10"></textarea>
                    <span asp-validation-for="NoiDung" class="text-danger"></span>
                </div>
                
                
                <div class="form-group mb-4">
                    <label asp-for="TrangThai" class="form-label">Trạng thái</label>
                    <select asp-for="TrangThai" class="form-select">
                        <option value="HienThi">Hiển thị</option>
                        <option value="An">Ẩn</option>
                    </select>
                    <span asp-validation-for="TrangThai" class="text-danger"></span>
                </div>
                
                <div class="d-flex justify-content-between">
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Quay lại
                    </a>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save"></i> Lưu
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            ClassicEditor
                .create(document.querySelector('#editor'), {
                    toolbar: [
                        'bold', 'italic', '|',
                        'bulletedList', 'numberedList', '|',
                        'link', '|',
                        'undo', 'redo'
                    ]
                })
                .then(editor => {
                    // Sync editor data with the form before submission
                    const form = document.querySelector('form');
                    form.addEventListener('submit', function() {
                        const editorData = editor.getData();
                        document.querySelector('#editor').value = editorData;
                    });
                })
                .catch(error => {
                    console.error('Lỗi khởi tạo CKEditor:', error);
                });
        });
    </script>
}
